CREATE OR REPLACE PACKAGE PKG_UTIL IS

  FUNCTION TIRAACENTO
    (P_STRING IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION TIRACHARESPECIAL
    (P_STRING IN VARCHAR2) RETURN VARCHAR2;
    
  FUNCTION TIRAESPACOBRANCO
    (P_STRING IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION VALIDADATA
    (P_DATA IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION VALIDACNPJ
    (CNPJ IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION VALIDACPF
    (CPF IN VARCHAR2) RETURN VARCHAR2;

END;
/

CREATE OR REPLACE PACKAGE BODY PKG_UTIL IS

  FUNCTION TIRAACENTO
    (P_STRING IN VARCHAR2) RETURN VARCHAR2 IS
    V_STRINGRETURN VARCHAR2(2000);
  BEGIN
    V_STRINGRETURN := TRANSLATE(P_STRING,
                     'ÁÇÉÍÓÚÀÈÌÒÙÂÊÎÔÛÃÕËÜáçéíóúàèìòùâêîôûãõëü',
                     'ACEIOUAEIOUAEIOUAOEUaceiouaeiouaeiouaoeu');
    RETURN V_STRINGRETURN;
  END;

  --------------------------------------------------------------------------------------

  FUNCTION TIRACHARESPECIAL
    (P_STRING IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN REGEXP_REPLACE(P_STRING, '[^[:alnum:]'' '']', NULL);
  END;

  --------------------------------------------------------------------------------------

  FUNCTION TIRAESPACOBRANCO
    (P_STRING IN VARCHAR2) RETURN VARCHAR2 IS
  BEGIN
    RETURN REPLACE(P_STRING, ' ', '');
  END;

  --------------------------------------------------------------------------------------

  FUNCTION VALIDADATA
    (P_DATA IN VARCHAR2) RETURN VARCHAR2 IS
    V_DATA DATE;
  BEGIN
    SELECT TO_DATE(P_DATA, 'DD-MM-YYYY HH24:MI:SS') INTO V_DATA FROM DUAL;
    RETURN 'TRUE';
    EXCEPTION WHEN OTHERS THEN
      RETURN 'FALSE';
  END;

  --------------------------------------------------------------------------------------

  FUNCTION VALIDACNPJ
    (CNPJ IN VARCHAR2) RETURN VARCHAR2 IS
    V_DIGITO NUMBER := 0;
    V_SOMA NUMBER := 0;
    V_CNPJ_LIMPO VARCHAR2 (14) := PKG_UTIL.TIRACHARESPECIAL(TRIM(CNPJ));
  BEGIN
    IF LENGTH (V_CNPJ_LIMPO) <> 14 THEN
      RETURN 'FALSE';
    END IF;

    IF (V_CNPJ_LIMPO = '00000000000000' OR V_CNPJ_LIMPO = '11111111111111' OR V_CNPJ_LIMPO = '22222222222222' OR V_CNPJ_LIMPO = '33333333333333' OR
        V_CNPJ_LIMPO = '44444444444444' OR V_CNPJ_LIMPO = '55555555555555' OR V_CNPJ_LIMPO = '66666666666666' OR V_CNPJ_LIMPO = '77777777777777' OR
        V_CNPJ_LIMPO = '88888888888888' OR V_CNPJ_LIMPO = '99999999999999') THEN
        RETURN 'FALSE';
    END IF;

    FOR i IN 1 .. 4 LOOP
      V_SOMA := V_SOMA + SUBSTR (V_CNPJ_LIMPO, i, 1) * (6 - i);
    END LOOP;

    FOR i IN 5 .. 12 LOOP
      V_SOMA := V_SOMA + SUBSTR (V_CNPJ_LIMPO, i, 1) * (14 - i);
    END LOOP;

    V_DIGITO := 11 - MOD (V_SOMA, 11);

    IF V_DIGITO > 9 THEN
      V_DIGITO := 0;
    END IF;

    IF V_DIGITO != SUBSTR (V_CNPJ_LIMPO, 13, 1) THEN
      RETURN 'FALSE';
    END IF;

    V_DIGITO := 0;
    V_SOMA := 0;

    FOR i IN 1 .. 5 LOOP
      V_SOMA := V_SOMA + SUBSTR (V_CNPJ_LIMPO, i, 1) * (7 - i);
    END LOOP;

    FOR i IN 6 .. 13 LOOP
      V_SOMA := V_SOMA + SUBSTR (V_CNPJ_LIMPO, i, 1) * (15 - i);
    END LOOP;

    V_DIGITO := 11 - MOD (V_SOMA, 11);

    IF V_DIGITO > 9 THEN
      V_DIGITO := 0;
    END IF;

    IF V_DIGITO != SUBSTR (V_CNPJ_LIMPO, 14, 1) THEN
      RETURN 'FALSE';
    END IF;

    RETURN 'TRUE';
  END VALIDACNPJ;

--------------------------------------------------------------------------------

  FUNCTION VALIDACPF
    (CPF IN VARCHAR2) RETURN VARCHAR2 IS
    V_TOTAL NUMBER := 0;
    V_DIGITO NUMBER := 0;
    V_CPF_LIMPO VARCHAR2 (14) := PKG_UTIL.TIRACHARESPECIAL(TRIM(CPF));
  BEGIN
    IF LENGTH (V_CPF_LIMPO) <> 11 THEN
      RETURN 'FALSE';
    END IF;

    IF (V_CPF_LIMPO = '00000000000' OR V_CPF_LIMPO = '11111111111' OR V_CPF_LIMPO = '22222222222' OR V_CPF_LIMPO = '33333333333' OR
        V_CPF_LIMPO = '44444444444' OR V_CPF_LIMPO = '55555555555' OR V_CPF_LIMPO = '66666666666' OR V_CPF_LIMPO = '77777777777' OR
        V_CPF_LIMPO = '88888888888' OR V_CPF_LIMPO = '99999999999' OR V_CPF_LIMPO = '01234567890' OR V_CPF_LIMPO = '98765432100') THEN
        RETURN 'FALSE';
    END IF;

    FOR i IN 1 .. 9 LOOP
      V_TOTAL := V_TOTAL + SUBSTR (V_CPF_LIMPO, i, 1) * (11 - i);
    END LOOP;

    V_DIGITO := 11 - MOD (V_TOTAL, 11);

    IF V_DIGITO > 9 THEN
      V_DIGITO := 0;
    END IF;

    IF V_DIGITO != SUBSTR (V_CPF_LIMPO, 10, 1) THEN
      RETURN 'FALSE';
    END IF;

    V_DIGITO := 0;
    V_TOTAL := 0;

    FOR i IN 1 .. 10 LOOP
      V_TOTAL := V_TOTAL + SUBSTR (V_CPF_LIMPO, i, 1) * (12 - i);
    END LOOP;

    V_DIGITO := 11 - MOD (V_TOTAL, 11);

    IF V_DIGITO > 9 THEN
      V_DIGITO := 0;
    END IF;

    IF V_DIGITO != SUBSTR (V_CPF_LIMPO, 11, 1) THEN
      RETURN 'FALSE';
    END IF;

    RETURN 'TRUE';
  END VALIDACPF;

END;
/